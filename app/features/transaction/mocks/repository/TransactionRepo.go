// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	entities "github.com/ropel12/project-3/app/entities"
	gorm "gorm.io/gorm"

	mock "github.com/stretchr/testify/mock"
)

// TransactionRepo is an autogenerated mock type for the TransactionRepo type
type TransactionRepo struct {
	mock.Mock
}

// Create provides a mock function with given fields: db, cart
func (_m *TransactionRepo) Create(db *gorm.DB, cart entities.Carts) error {
	ret := _m.Called(db, cart)

	var r0 error
	if rf, ok := ret.Get(0).(func(*gorm.DB, entities.Carts) error); ok {
		r0 = rf(db, cart)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewTransactionRepo interface {
	mock.TestingT
	Cleanup(func())
}

// NewTransactionRepo creates a new instance of TransactionRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTransactionRepo(t mockConstructorTestingTNewTransactionRepo) *TransactionRepo {
	mock := &TransactionRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
